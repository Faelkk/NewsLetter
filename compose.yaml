services:
  newsletter:
    container_name: newsletter
    build:
      context: .
      dockerfile: src/Newsletter.Presentation/Dockerfile
    environment:
      - ConnectionStrings__Default=${CONNECTION_STRING}
    networks:
      - minha-rede
    ports:
      - "5010:5010"
    depends_on:
      - postgres_db
    restart: unless-stopped

  postgres_db:
    image: postgres:latest
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - minha-rede
  
  broker:
    image: apache/kafka:latest
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - minha-rede

  newsletter_worker:
    container_name: newsletter_worker
    build:
      context: .
      dockerfile: src/Newsletter.Worker/Dockerfile
    restart: unless-stopped
    networks:
      - minha-rede
    depends_on:
      - broker
        

volumes:
  postgres_data:
    driver: local

networks:
  minha-rede:
    driver: bridge




